
  $ export CHRO_DEBUG=1
  $ export CHRO_TRACE_OPT=1
  $ Chro -no-over-approx -bound 3  -dsimpl -stop-after simpl ../overapprox/NIA2334test1.smt2
  iter(1)= (and
             (<= (+ (+ (+ (+ (+ 0 (* (* (- 1) 59357) x1))
                          (* (* (- 1) 1494) x2))
                       (* (* (- 1) 76257) x3))
                    (* 56802 x4))
                 (* 39683 x5)) (* (- 1) 45546))
             (<= (+ (+ (+ (+ (+ 0 (* 84701 x1)) (* (* (- 1) 6295) x2))
                       (* 25332 x3))
                    (* (* (- 1) 20749) x4))
                 (* (* (- 1) 37170) x5)) 96869)
             (<= (+ (+ (+ (+ (+ 0 (* 11240 x1)) (* (* (- 1) 6357) x2))
                       (* (* (- 1) 57242) x3))
                    (* 57487 x4))
                 (* (* (- 1) 82001) x5)) (* (- 1) 8403))
             (<= (+ (+ (+ (+ (+ 0 (* (* (- 1) 43994) x1))
                          (* (* (- 1) 34064) x2))
                       (* 48000 x3))
                    (* 95204 x4))
                 (* (* (- 1) 79965) x5)) 25)
             (<= (+ (+ (+ (+ (+ (+ (+ 0 (* (* (- 1) 35) (exp 2 x1)))
                                (* (* (- 1) 36) (exp 2 x2)))
                             (* 84682 x1))
                          (* 63074 x2))
                       (* 72701 x3))
                    (* (* (- 1) 25207) x4))
                 (* (* (- 1) 45670) x5)) 58485)
             (<= (+ (+ (+ (+ (+ (+ (+ 0 (* (* (- 1) 66) (exp 2 x1)))
                                (* (* (- 1) 73) (exp 2 x2)))
                             (* 2817 x1))
                          (* (* (- 1) 24158) x2))
                       (* (* (- 1) 15169) x3))
                    (* (* (- 1) 90303) x4))
                 (* 74384 x5)) 6606)
             (<= (+ (+ (+ (+ (+ (+ (+ 0 (* (* (- 1) 69) (exp 2 x1)))
                                (* 97 (exp 2 x2)))
                             (* 95792 x1))
                          (* 19684 x2))
                       (* (* (- 1) 10671) x3))
                    (* (* (- 1) 78209) x4))
                 (* 86876 x5)) (* (- 1) 97300))
             (<= 0 x5)
             (<= 0 x4)
             (<= 0 x3)
             (<= 0 x2)
             (<= 0 x1))
  iter(2)= (and
             (<= 0 x1)
             (<= 0 x2)
             (<= 0 x3)
             (<= 0 x4)
             (<= 0 x5)
             (<= (+ (* (- 90303) x4) (* (- 24158) x2) (* (- 15169) x3)
                 (* (- 73) (exp 2 x2)) (* (- 66) (exp 2 x1)) (* 2817 x1)
                 (* 74384 x5)) 6606)
             (<= (+ (* (- 82001) x5) (* (- 57242) x3) (* (- 6357) x2)
                 (* 11240 x1) (* 57487 x4)) (- 8403))
             (<= (+ (* (- 79965) x5) (* (- 43994) x1) (* (- 34064) x2)
                 (* 48000 x3) (* 95204 x4)) 25)
             (<= (+ (* (- 78209) x4) (* (- 10671) x3) (* (- 69) (exp 2 x1))
                 (* 97 (exp 2 x2)) (* 19684 x2) (* 86876 x5) (* 95792 x1)) (- 97300))
             (<= (+ (* (- 76257) x3) (* (- 59357) x1) (* (- 1494) x2)
                 (* 39683 x5) (* 56802 x4)) (- 45546))
             (<= (+ (* (- 45670) x5) (* (- 25207) x4) (* (- 36) (exp 2 x2))
                 (* (- 35) (exp 2 x1)) (* 63074 x2) (* 72701 x3) (* 84682 x1)) 58485)
             (<= (+ (* (- 37170) x5) (* (- 20749) x4) (* (- 6295) x2)
                 (* 25332 x3) (* 84701 x1)) 96869))
  Interesting: x1 x2
  
  Expecting 9 choices ...
  
  Can't decide in lib/Underapprox.ml
  Simplify step: (0 <= x1 & 0 <= x2 & 0 <= x3 & 0 <= x4 & 0 <= x5 & (+ (* -90303 * x4) + (* -24158 * x2) + (* -15169 * x3) + (* -73 * (2 ** x2)) + (* -66 * (2 ** x1)) + (* 2817 * x1) + (* 74384 * x5)) <= 6606 & (+ (* -82001 * x5) + (* -57242 * x3) + (* -6357 * x2) + (* 11240 * x1) + (* 57487 * x4)) <= -8403 & (+ (* -79965 * x5) + (* -43994 * x1) + (* -34064 * x2) + (* 48000 * x3) + (* 95204 * x4)) <= 25 & (+ (* -78209 * x4) + (* -10671 * x3) + (* -69 * (2 ** x1)) + (* 97 * (2 ** x2)) + (* 19684 * x2) + (* 86876 * x5) + (* 95792 * x1)) <= -97300 & (+ (* -76257 * x3) + (* -59357 * x1) + (* -1494 * x2) + (* 39683 * x5) + (* 56802 * x4)) <= -45546 & (+ (* -45670 * x5) + (* -25207 * x4) + (* -36 * (2 ** x2)) + (* -35 * (2 ** x1)) + (* 63074 * x2) + (* 72701 * x3) + (* 84682 * x1)) <= 58485 & (+ (* -37170 * x5) + (* -20749 * x4) + (* -6295 * x2) + (* 25332 * x3) + (* 84701 * x1)) <= 96869)
  Simplified expression: (0 <= x1 & 0 <= x2 & 0 <= x3 & 0 <= x4 & 0 <= x5 & (+ (* -90303 * x4) + (* -24158 * x2) + (* -15169 * x3) + (* -73 * (2 ** x2)) + (* -66 * (2 ** x1)) + (* 2817 * x1) + (* 74384 * x5)) <= 6606 & (+ (* -82001 * x5) + (* -57242 * x3) + (* -6357 * x2) + (* 11240 * x1) + (* 57487 * x4)) <= -8403 & (+ (* -79965 * x5) + (* -43994 * x1) + (* -34064 * x2) + (* 48000 * x3) + (* 95204 * x4)) <= 25 & (+ (* -78209 * x4) + (* -10671 * x3) + (* -69 * (2 ** x1)) + (* 97 * (2 ** x2)) + (* 19684 * x2) + (* 86876 * x5) + (* 95792 * x1)) <= -97300 & (+ (* -76257 * x3) + (* -59357 * x1) + (* -1494 * x2) + (* 39683 * x5) + (* 56802 * x4)) <= -45546 & (+ (* -45670 * x5) + (* -25207 * x4) + (* -36 * (2 ** x2)) + (* -35 * (2 ** x1)) + (* 63074 * x2) + (* 72701 * x3) + (* 84682 * x1)) <= 58485 & (+ (* -37170 * x5) + (* -20749 * x4) + (* -6295 * x2) + (* 25332 * x3) + (* 84701 * x1)) <= 96869)
  Vars: ["x5"]
  Var x5 can't be interesting: used somewhere
    subst = {| |}
    subst = {| |}
    subst = {| |}
  (assert (exists (x5)
          (and
            (<= (* (- 1) x1)  0)
            (<= (* (- 1) x2)  0)
            (<= (* (- 1) x5)  0)
            (exists (x4)
            (and
              (<= (* (- 1) x4)  0)
              (exists (x3)
              (and
                (<= (+ (* 95792 x1) (* 19684 x2) (* (- 10671) x3)
                    (* (- 78209) x4) (* 86876 x5) (* (- 69) pow2(x1))
                    (* 97 pow2(x2)) )
                 -97300)
                (<= (+ (* (- 59357) x1) (* (- 1494) x2) (* (- 76257) x3)
                    (* 56802 x4) (* 39683 x5) )
                 -45546)
                (<= (+ (* 11240 x1) (* (- 6357) x2) (* (- 57242) x3)
                    (* 57487 x4) (* (- 82001) x5) )
                 -8403)
                (<= (* (- 1) x3)  0)
                (<= (+ (* (- 43994) x1) (* (- 34064) x2) (* 48000 x3)
                    (* 95204 x4) (* (- 79965) x5) )
                 25)
                (<= (+ (* 2817 x1) (* (- 24158) x2) (* (- 15169) x3)
                    (* (- 90303) x4) (* 74384 x5) (* (- 66) pow2(x1))
                    (* (- 73) pow2(x2)) )
                 6606)
                (<= (+ (* 84682 x1) (* 63074 x2) (* 72701 x3) (* (- 25207) x4)
                    (* (- 45670) x5) (* (- 35) pow2(x1)) (* (- 36) pow2(x2)) )
                 58485)
                (<= (+ (* 84701 x1) (* (- 6295) x2) (* 25332 x3)
                    (* (- 20749) x4) (* (- 37170) x5) )
                 96869)
                )
              )
            )
  )
