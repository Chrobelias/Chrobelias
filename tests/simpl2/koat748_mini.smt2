(set-logic ALL)
(declare-fun i4 () Int)
(declare-fun i1 () Int)
(declare-fun i3 () Int)
(declare-fun it1090 () Int)
(declare-fun i2 () Int)
(declare-fun it1091 () Int)
(declare-fun it1092 () Int)
(declare-fun it1093 () Int)
(declare-fun it1094 () Int)
(declare-fun it1095 () Int)
(declare-fun it134 () Int)
(declare-fun it1106 () Int)
(declare-fun it1107 () Int)
(declare-fun it1108 () Int)
(declare-fun it1109 () Int)
(declare-fun it1110 () Int)
(declare-fun it1111 () Int)
(declare-fun it1116 () Int)
(declare-fun it1117 () Int)
(declare-fun it1118 () Int)
(declare-fun it1119 () Int)
(declare-fun it1120 () Int)
(declare-fun it1121 () Int)
(declare-fun it88 () Int)
(declare-fun it1124 () Int)
(declare-fun it1125 () Int)
(declare-fun it1126 () Int)
(declare-fun it1127 () Int)
(declare-fun it1128 () Int)
(declare-fun it1129 () Int)
(declare-fun it19 () Int)
(declare-fun it1138 () Int)
(declare-fun it1139 () Int)
(declare-fun it1140 () Int)
(declare-fun it1141 () Int)
(declare-fun it1142 () Int)
(declare-fun it1143 () Int)
(declare-fun it57 () Int)

(assert (let ((a!1 (>= (+ (+ (* it1095 (- 1)) it1093) (- 1)) 0))
      (a!2 (+ (* (+ 0 it1095) (exp 2 (+ it134 (- 1))) (+ 0 (- 1)))

              (* (exp 2 it134) (+ 0 (- 1))))))
  (and (>= (+ it134 (- 1)) 0)

       (>= (+ a!2 (+ 0 2)) (+ 0 0))
       (>= (+ (* it1090 (- 1)) 3) 0)
       (>= (+ (* it1095 (- 1)) it1093) 0))))
(assert (= (+ it1118 (- 1)) 0))
(assert (= (+ (* it1109 (- 1)) it1119) 0))
(assert (= (+ it1124 (* it1116 (- 1))) 0))
(assert (= (+ (* it88 (- 3)) (* it1117 (- 1)) it1125) 0))
(assert (= (+ it1126 (* it1118 (- 1))) 0))
(assert (= (+ (* it1126 (- 2)) it1143) 0))
(assert (let ((a!1 (+ (+ 0 it1141)
              (* (+ 0 it1143) (exp 2 (+ it57 (- 1))) (+ 0 (- 1)))))
      (a!2 (>= (+ (+ (* it1143 (- 1)) it1141) (- 1)) 0)))
  (and (>= (+ a!1 (+ 0 (- 1))) (+ 0 0))
       (>= (+ (* it1143 (- 1)) it1141) 0)
       (>= (+ it1138 (- 3)) 0)
       (>= (+ it1143 (- 1)) 0)
       (>= (+ it57 (- 1)) 0))))
(check-sat)
