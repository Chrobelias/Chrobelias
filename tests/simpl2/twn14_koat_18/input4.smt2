(set-logic ALL)
(declare-fun i1 () Int)
(declare-fun it321 () Int)
(declare-fun it322 () Int)
(declare-fun i2 () Int)
(declare-fun i3 () Int)
(declare-fun it323 () Int)
(declare-fun it324 () Int)
(declare-fun i4 () Int)
(declare-fun it325 () Int)
(declare-fun i5 () Int)
(declare-fun i6 () Int)
(declare-fun it326 () Int)
(declare-fun i7 () Int)
(declare-fun it327 () Int)
(declare-fun it357 () Int)
(declare-fun it358 () Int)
(declare-fun it359 () Int)
(declare-fun it360 () Int)
(declare-fun it361 () Int)
(declare-fun it362 () Int)
(declare-fun it363 () Int)
(declare-fun it372 () Int)
(declare-fun it373 () Int)
(declare-fun it374 () Int)
(declare-fun it375 () Int)
(declare-fun it376 () Int)
(declare-fun it377 () Int)
(declare-fun it378 () Int)
(declare-fun it140 () Int)
(assert (and
             (= (+ it376 (* (- 3) i7) (* 2 (exp i6 3))) 0)
             (= (+ (* (- 2) i3) (* 2 i3)) 0)
             (<= i6 5)
             (<= 1 i3)
             (<= 1 (* 2 i3))
             (<= 1 (* 4 i3))
             (<= (+ (* (- 3) it376 (exp 9 (+ (- 1) it140)))
                 (* (- 1) (exp i6 3)) (* 3 (exp i6 3) (exp 9 (+ (- 1) it140)))
                 (* 4 (exp (* (- 2) i3) 2) (exp (exp 4 (+ (- 1) it140)) 2))
                 (exp i6 5)) (- 1))
             (<= (+ (* (- 1) i7) (exp i3 2) (exp i6 5)) (- 1))
             (<= (+ (* (- 1) it376) (exp i6 5) (exp (* (- 2) i3) 2)) (- 1))
             (<= (+ (* (- 1) it376 (exp 9 (+ (- 1) it140)))
                 (* (- 1) (exp i6 3)) (* (exp i6 3) (exp 9 (+ (- 1) it140)))
                 (* (exp (* (- 2) i3) 2) (exp (exp 4 (+ (- 1) it140)) 2))
                 (exp i6 5)) (- 1))
             (<= (* (- 1) i6) 5)
             (<= (* (- 1) it140) (- 1)))
)
(check-sat)
